/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Calculadora.java
 *
 * Created on 10/08/2009, 04:28:02 PM
 */

package omoikane.formularios;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GraphicsConfiguration;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.StringSelection;
import javax.swing.JPanel;
import javax.swing.text.JTextComponent;

public class Calculadora extends javax.swing.JInternalFrame implements java.awt.datatransfer.ClipboardOwner {

    private Clipboard clipboard;
    private Component invocador;
    BufferedImage fondo;
    private boolean enterOnce = false;

    @Override
    public void lostOwnership(Clipboard clp, Transferable transf) {}

    /** Creates new form Calculadora */
    public Calculadora() {
        initComponents();
        this.setOpaque(false);
        ((JPanel)this.getContentPane()).setOpaque(false);
        this.getLayeredPane().setOpaque(false);
        this.getRootPane().setOpaque(false);
        this.generarFondo(this);

        omoikane.sistema.Herramientas.centrarVentana(this);
        this.setVisible(true);
    }

    public Calculadora(Clipboard cb, Component invk ) {
        initComponents();

        setClipboard(cb);
        invocador = invk;
        jcalCalculadora.setKeyboardMapping();

        this.setOpaque(false);
        ((JPanel)this.getContentPane()).setOpaque(false);
        this.getLayeredPane().setOpaque(false);
        this.getRootPane().setOpaque(false);
        this.generarFondo(this);
        omoikane.sistema.Herramientas.centrarVentana(this);
        this.setVisible(true);
    }

    public void setClipboard(Clipboard cb) {
        clipboard = cb;
    }

     public void paintComponent(Graphics g)
    {
      Graphics2D g2d = (Graphics2D) g;
      g2d.drawImage(fondo, 0, 0, null);

    }

    public void generarFondo(Component componente)
    {
      Rectangle areaDibujo = this.getBounds();
      BufferedImage tmp;
      GraphicsConfiguration gc = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration();

      tmp = gc.createCompatibleImage(areaDibujo.width, areaDibujo.height,BufferedImage.TRANSLUCENT);
      Graphics2D g2d = (Graphics2D) tmp.getGraphics();
      g2d.setColor(new Color(55,55,255,165));
      g2d.fillRect(0,0,areaDibujo.width,areaDibujo.height);
      fondo = tmp;

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        etiquetaCalculadora = new javax.swing.JLabel();
        btnCerrar = new javax.swing.JButton();
        jcalCalculadora = new com.nieto.jcalc.JCalc();

        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        etiquetaCalculadora.setFont(new java.awt.Font("Arial", 1, 36));
        etiquetaCalculadora.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaCalculadora.setText("Calculadora");

        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/48x48/back.png"))); // NOI18N
        btnCerrar.setText("Cerrar[ESC]");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        jcalCalculadora.setButtonFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcalCalculadora.setDisplayBackground(new java.awt.Color(0, 0, 102));
        jcalCalculadora.setDisplayForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(etiquetaCalculadora)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCerrar, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jcalCalculadora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiquetaCalculadora)
                    .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcalCalculadora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        cerrar();
}//GEN-LAST:event_btnCerrarActionPerformed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)
            if(!enterOnce)
            enterOnce = true;
            else {
                copiar();
                cerrar();
            }
    }//GEN-LAST:event_formKeyReleased

private void cerrar() {
    invocador.requestFocusInWindow();
    this.dispose();
}

private void copiar() {
    clipboard = getToolkit().getSystemClipboard();
        StringSelection strResult = new StringSelection(jcalCalculadora.getDisplay());
        clipboard.setContents(strResult,this);

        try {
            Transferable transferable = clipboard.getContents(this);
            String strPaste = (String) transferable.getTransferData(DataFlavor.stringFlavor);

            if(JTextComponent.class.isInstance(invocador)) {
                ((JTextComponent) invocador).setText( ((JTextComponent) invocador).getText() + strPaste);
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JLabel etiquetaCalculadora;
    private com.nieto.jcalc.JCalc jcalCalculadora;
    // End of variables declaration//GEN-END:variables

}
