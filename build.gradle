import org.apache.tools.ant.filters.ReplaceTokens 

apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'idea'

version = '1.3.3'

mainClassName = "omoikane.principal.MainJava"

sourceCompatibility = 1.6

title = 'Omoikane'

def defaultEncoding = "UTF-8"
[compileGroovy, compileTestGroovy]*.options*.encoding = defaultEncoding
[compileGroovy, compileTestGroovy]*.groovyOptions*.encoding = defaultEncoding
System.setProperty('file.encoding', defaultEncoding)

sourceSets {
    main {
        groovy {
            srcDir 'main/src'
        }
	 	resources {
	        srcDir 'main/resources'
	    }
    }
	test {
		groovy {
			srcDirs 'test/src'
		}
		resources {
			srcDirs 'test/resources'
		}
	}
}

repositories {
    mavenCentral()
	mavenRepo urls: "http://maven.springframework.org/milestone"
}

dependencies {
	groovy group: 'org.codehaus.groovy', name: 'groovy-all', version: '1.7.6'
	compile (
		'joda-time:joda-time:1.6.2',
		[group: 'net.sf.jasperreports', name: 'jasperreports'          , version: '3.7.1'],
		[group: 'org.codehaus.groovy' , name: 'groovy-all'             , version: '1.7.6'],
		[group: 'org.codehaus.groovy' , name: 'groovy-xmlrpc'          , version: '0.4'],
		[group: 'mysql'               , name: 'mysql-connector-java'   , version: '5.1.16'],
        [group: 'jivesoftware'        , name: 'smack'                  , version: '3.0.4'],
		[group: 'org.swinglabs'       , name: 'swingx'                 , version: '1.6.1'],
		[group: 'com.kenai.nbpwr'     , name: 'org-jdesktop-animation-timing', version:'1.0-201002281504'],
		[group: 'com.miglayout'       , name: 'miglayout'              , version: '3.7.4'],
		[group: 'org.rxtx'            , name: 'rxtx'                   , version: '2.1.7'],
		[group: 'javassist'           , name: 'javassist'              , version: '3.12.1.GA'],
		[group: 'org.hibernate'       , name: 'hibernate-core'         , version: '3.6.5.Final'],
		[group: 'org.slf4j'           , name: 'slf4j-log4j12'          , version: '1.6.1'],
		[group: 'org.springframework' , name: 'spring-core'            , version: '3.0.5.RELEASE'],
		[group: 'org.springframework' , name: 'spring-aop'             , version: '3.0.5.RELEASE'],
		[group: 'org.springframework' , name: 'spring-context'         , version: '3.0.5.RELEASE'],
		[group: 'org.springframework' , name: 'spring-orm'             , version: '3.0.5.RELEASE'],
    	[group: 'org.springframework' , name: 'spring-aspects'         , version: '3.0.5.RELEASE'],						
		[group: 'org.hibernate'       , name: 'hibernate-ehcache'      , version: '3.6.5.Final'],
		[group: 'org.hibernate'       , name: 'hibernate-c3p0'         , version: '3.6.5.Final'],
		[group: 'org.synyx.hades'     , name: 'org.synyx.hades'        , version: '2.0.3.RELEASE', transitive:false],
		[group: 'org.hibernate'       , name: 'hibernate-entitymanager', version: '3.6.5.Final'],
        [group: 'org.hibernate'       , name: 'hibernate-validator'    , version: '4.2.0.Final'],
		[group: 'commons-dbcp'        , name: 'commons-dbcp'           , version: '1.4']		
	)
	compile files('lib/jcalc-1.0.4.jar',
				  'lib/OmoikaneMedia.jar',
				  'lib/nimbus.jar',
				  'lib/OmoikaneAPI-1.0-SNAPSHOT.jar',
				  'lib/AbsoluteLayout.jar',
				  'lib/ext/ModuloReportes.jar',
				  'lib/ext/PlugMenu3.jar.jar',
				  'lib/dpfpenrollment.jar',
				  'lib/dpfpverification.jar',
				  'lib/dpotapi.jar',
				  'lib/dpotjni.jar')
	runtime files('lib/OmoikaneMedia.jar',
				  'lib/nimbus.jar')
	testCompile ('junit:junit:4.8.1',
                 [group: 'org.codehaus.groovy' , name: 'groovy-all'             , version: '1.7.6'],
                 [group: 'org.apache.ant'      , name: 'ant'                    , version: '1.8.2'],
		 		 [group: 'javassist'           , name: 'javassist'              , version: '3.12.1.GA'],
				 [group: 'org.hibernate'       , name: 'hibernate-core'         , version: '3.6.5.Final'],	
				 [group: 'org.slf4j'           , name: 'slf4j-log4j12'          , version: '1.6.1'],
				 [group: 'org.springframework' , name: 'spring-core'            , version: '3.0.5.RELEASE'],
				 [group: 'org.springframework' , name: 'spring-aop'             , version: '3.0.5.RELEASE'],
				 [group: 'org.springframework' , name: 'spring-context'         , version: '3.0.5.RELEASE'],
 				 [group: 'org.springframework' , name: 'spring-orm'             , version: '3.0.5.RELEASE'],
				 [group: 'org.springframework' , name: 'spring-test'            , version: '3.0.5.RELEASE'],
				 [group: 'org.springframework' , name: 'spring-aspects'         , version: '3.0.5.RELEASE'],				
				 [group: 'org.hibernate'       , name: 'hibernate-ehcache'      , version: '3.6.5.Final'],
				 [group: 'org.hibernate'       , name: 'hibernate-c3p0'         , version: '3.6.5.Final'],
				 [group: 'org.synyx.hades'     , name: 'org.synyx.hades'        , version: '2.0.3.RELEASE', transitive:false],
				 [group: 'org.hibernate'       , name: 'hibernate-entitymanager', version: '3.6.5.Final'],
                 [group: 'org.hibernate'       , name: 'hibernate-validator'    , version: '4.2.0.Final'],
				 [group: 'commons-dbcp'        , name: 'commons-dbcp'           , version: '1.4'])
}

jar {
    manifest {
	    def manifestClasspath = configurations.runtime.collect { "lib/"+it.getName() }.join(' ') 
	              
        attributes 'Implementation-Title': title, 
				   'Implementation-Version': version,
				   'Main-Class': mainClassName,
				   'Class-Path': manifestClasspath
    }
}

task distribuir(dependsOn: 'installApp') {
	miDistDir        = new File("dist")

	//Copy griaule related files
	/* Descontinuado el 09/07/2012
	copy {
	   from "libgrfingerjava.so", 
			"GrFingerLicenseAgreement.txt",
			"GrFingerJavaLicenseAgreement.txt",
			"pthreadVC2.dll",
			"CapPluginHamster.dll",
			"grfingerjava.dll"
	   into "$miDistDir"
	}
	*/

    //Copy DigitalPersona related files
    copy {
	   from "DPCOper2.dll",
			"DPCrStor.dll",
			"DPDevice2.dll",
			"DPDevTS.dll",
			"DpHostW.exe",
			"DPJasPer.dll",
            "DPmsg.dll",
            "DPMux.dll",
            "DpSvInfo2.dll",
            "DPTSClnt.dll",
            // RXTX Comm files
            "RXTXcomm.jar",
            "rxtxSerial.dll",
            // Scripts
            "inicio.bat"
	   into "$miDistDir"
	}
	
	//Copy binary
	copy {
		from "$buildDir/install/${title}/lib/${title}-${version}.jar"
		into "$miDistDir"
		rename { "Omoikane.jar" }
	}
	
	//Copy libs without main binary
	daLibs = new File("$miDistDir/lib")
	copy {
		from "$buildDir/install/${title}/lib"
		into "$daLibs"
		exclude "${title}-${version}.jar"
	}
	
	//Copy extensions
	daExts = new File("$miDistDir/lib/ext")
	copy {
		from "lib/ext"
		into "$daExts"
	}

    //Copy to local repo
    miDistArchiveDir = new File("archive/dist-${version}")
    copy {
        from "$miDistDir"
        into "$miDistArchiveDir"
    }


}

